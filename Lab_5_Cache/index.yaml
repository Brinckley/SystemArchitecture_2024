openapi: '3.0.0'
info:
  version: '1.0.0'
  title: 'Social Network API'
  description: Perform operations for social network users about messages and posts
servers:
  - url: http://0.0.0.0:8080
    description: Social network server

paths:
  /signup:
    post:
      description: Creates an account for the user
      requestBody:
        description: Account to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/accountDto"
      responses:
        "200":
          description: account id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountIdString"
        '204':
          description: No content
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: the result of the operation
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'     
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Connection between microservices failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /signin:
    post:
      description: Generate a token for the user if account exists
      requestBody:
        description: Login and password
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/accountLogin"
      responses:
        "200":
          description: account id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tokenString"
        '204':
          description: No content
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: the result of the operation
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'     
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Connection between microservices failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /accounts:
    get:
      description: Get all accounts
      responses:
        "200":
          description: accounts in the network
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accounts"
        '204':
          description: No content
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: the result of the operation
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'     
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Connection between microservices failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /account/{search}:
    get:
      description: Get all accounts matching the given string
      parameters:
      - name: search
        description: regexp
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: matched accounts in the network
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accounts"
        '204':
          description: No content
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: the result of the operation
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'     
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Connection between microservices failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /account:
    get:
      description: Get data about account
      security:
        - bearerAuth: []
      responses:
        "200":
          description: account in the network
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountRsp"
        '204':
          description: No content
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: the result of the operation
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'     
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Connection between microservices failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Edit the data
      requestBody:
        description: new account data
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/accountDto"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: success string
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: the result of the operation
        '204':
          description: No content
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: the result of the operation
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'     
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Connection between microservices failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Delete account
      security:
        - bearerAuth: []
      responses:
        "200":
          description: success string
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: the result of the operation
        '204':
          description: No content
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: the result of the operation
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'     
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Connection between microservices failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /messages:
    post:
      description: Message to be sent
      security:
        - bearerAuth: []
      requestBody:
        description: Description of the message
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/messageDto"
      responses:
        "200":
          description: account id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messageIdString"
        '204':
          description: No content
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: the result of the operation
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'     
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Connection between microservices failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /messages/account:
    get:
      description: Delete account
      security:
        - bearerAuth: []
      responses:
        "200":
          description: messages received by account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messages"
        '204':
          description: No content
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: the result of the operation
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'     
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Connection between microservices failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /messages/msg/{message_id}:
    get:
      description: Get msg by id for sender and receiver
      security:
        - bearerAuth: []
      parameters:
      - name: message_id
        description: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: messages
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messages"
        '204':
          description: No content
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: the result of the operation
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'     
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Connection between microservices failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /posts/account/{account_id}:
    get:
      description: Get posts by account
      parameters:
      - name: account_id
        description: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: posts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/posts"
        '204':
          description: No content
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: the result of the operation
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'     
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Connection between microservices failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /posts/{post_id}:
      get:
        description: Get post by id
        parameters:
        - name: post_id
          description: id
          in: path
          required: true
          schema:
            type: string
        responses:
          "200":
            description: posts
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/postDto"
          '204':
            description: No content
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    name:
                      type: string
                      description: the result of the operation
          '400':
            description: Validation error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'     
          '404':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Connection between microservices failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      put:
        description: Post to create
        security:
          - bearerAuth: []
        parameters:
          - name: post_id
            description: id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          description: Description of the message
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/postDto"
        responses:
          "200":
            description: success string
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    name:
                      type: string
                      description: the result of the operation
          '204':
            description: No content
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    name:
                      type: string
                      description: the result of the operation
          '400':
            description: Validation error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'     
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '404':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Connection between microservices failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      delete:
        description: Delete post
        security:
          - bearerAuth: []
        parameters:
          - name: post_id
            description: id
            in: path
            required: true
            schema:
              type: string
        responses:
          "200":
            description: success string
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    name:
                      type: string
                      description: the result of the operation
          '204':
            description: No content
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    name:
                      type: string
                      description: the result of the operation
          '400':
            description: Validation error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'     
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '404':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Connection between microservices failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /posts:
    post:
      description: Post to create
      security:
        - bearerAuth: []
      requestBody:
        description: Description of the message
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postDto"
      responses:
        "200":
          description: post id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/postIdString"
        '204':
          description: No content
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: the result of the operation
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'     
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Connection between microservices failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
components:
  schemas:
    tokenString:
      description: Text with token
      type: string
    accountIdString:
      description: Text with account unique ID
      type: string
    postIdString:
      description: Text with post unique ID
      type: string
    messageIdString:
      description: Text with message unique ID
      type: string
    accounts:
      type: array
      items:
        $ref: '#/components/schemas/accountRsp'
    posts:
      type: array
      items:
        $ref: '#/components/schemas/postRsp'
    messages:
      type: array
      items:
        $ref: '#/components/schemas/messageRsp'
    accountRsp:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        password:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
    accountDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
    accountLogin:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    messageRsp:
      type: object
      properties:
        id:
          type: integer
        sender_id:
          type: integer
        receiver_id:
          type: integer
        content:
          type: string
    messageDto:
      type: object
      properties:
        sender_id:
          type: integer
        receiver_id:
          type: integer
        content:
          type: string
    postRsp:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        content:
          type: string
    postDto:
      type: object
      properties:
        content:
          type: string

    Error:
      type: object
      required:
        - message
      properties:
        message:
          description: Error description
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT